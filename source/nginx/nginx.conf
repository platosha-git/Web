load_module /usr/lib/nginx/modules/ngx_http_headers_more_filter_module.so;

worker_processes auto;

error_log  /home/platosha/Desktop/BMSTU/7sem/Web/source/nginx/logs/error.log notice;


events {
    worker_connections  1024;
}

http {

    # Папка для кеша
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=tours_cache:32m max_size=1g  inactive=60m use_temp_path=off;

    upstream backend_master {
        server 127.0.0.1:5001;
    }

    upstream backend_slave {
        server 127.0.0.1:5000 weight=2;
        server 127.0.0.1:5001 weight=1;
        server 127.0.0.1:5002 weight=1;
    }

    more_set_headers "Server: Tours";

    ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
    ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
    ssl_prefer_server_ciphers on;

    # proxy_ssl_server_name on;
    error_log  /home/platosha/Desktop/BMSTU/7sem/Web/source/nginx/logs/error.log notice;

    # Кеширующий хост
    server {
        # ipv6 support
        listen [::]:80;
        listen 80;
        server_name _;

        add_header X-Cache-Status $upstream_cache_status;
        proxy_cache tours_cache;
        proxy_cache_methods GET;
        proxy_cache_valid 404 15s; 
        # proxy_cache_valid any 5m; # каждая страница будет сохраняться в кеш на 5 минут

        # force redirect to https
        rewrite ^ https://$http_host$request_uri? permanent;

        access_log  /home/platosha/Desktop/BMSTU/7sem/Web/source/nginx/logs/access_http.log;
    }

    # map $request_method $backend {
    #     GET backend_slave;
    #     default backend_master;
    # }

    map $request_method $prefix {
        GET "slave";
        default "master";
    }

    server {
        listen [::]:443 ssl;
        listen 443 ssl http2 default_server;
        server_name localhost;
        # keepalive_timeout   70;

        add_header X-Cache-Status $upstream_cache_status;
        proxy_cache tours_cache;
        # proxy_cache_methods GET;
        proxy_cache_valid 404 15s;
        proxy_cache_valid 301 302 15m;
        proxy_cache_valid 200 1m;

        # proxy_cache_valid any 5m; # каждая страница будет сохраняться в кеш на 5 минут

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        location /swagger/ {
            # rewrite ^/swagger/(.*)$ /swagger/$1 break;
            # return 301 https://$backend/swagger/;

            # proxy_pass https://backend_slave/swagger/;
            proxy_pass https://backend_slave/swagger/;
            proxy_no_cache 1;
        }

        location /api/ {
            proxy_pass https://backend_slave/swagger/;
            proxy_no_cache 1;
        }

        location /api/v1/ {
            rewrite ^/api/v1/(.+)$ /$prefix/api/v1/$1 last;
        }

        location /slave/api/v1/ {
            internal;
            proxy_pass https://backend_slave/api/v1/;
            proxy_no_cache 1;
        }

        location /master/api/v1/ {
            internal;
            proxy_pass https://backend_master/api/v1/;
            proxy_no_cache 1;
        }

        # Игрорирование /test/ (редирект на /)
        location /test {
            rewrite ^/test(.*)$ /$1 last;
        }

        location /admin {
            return 301 https://gitlab.com/-/profile/applications;
        }

        location = /status {
            stub_status;
            #access_log off;
            #allow 127.0.0.1;
            #deny all;
        }
    
        location = /api/v1/signalr/notifications {
            # Если вы хотите, чтобы nginx (> = 1.3.13) обрабатывал запросы websocket, добавьте следующие строки в location/ раздел:
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_pass https://backend_master/signalr/notifications;
            proxy_no_cache 1;
        }

        location /api/v1/notifications/ {
            # уведомления не надо кешировать
            proxy_pass https://backend_master/api/v1/notifications/;
            proxy_no_cache 1;
        }

        access_log  /home/platosha/Desktop/BMSTU/7sem/Web/source/nginx/logs/access_https.log;

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }

    # #Включение сжатия
    gzip on;
    gzip_comp_level 5; # уровень сжатия (9 - эффективный, но медленный)
}